[
  
    {
      "title"       : "Sacarle Chispas",
      "category"    : "",
      "tags"        : "",
      "url"         : "./sacarle-chispas.html",
      "date"        : "2020-03-17 00:00:00 +0100",
      "description" : "",
      "content"     : "Voy a permitirme la licencia de no hablar ni de metodologías ni de tecnología en este post. Y es que en estos días tan extraños, y me refiero al COVID-19, todos estamos tratando de vivir una rutina fuera de la rutina.Ha sido espectacular ver cómo empresas que no estaban preparadas para el teletrabajo, se adaptaban en un tiempo récord a esta nueva situación; trabajadores, de todo tipo de sectores, se han ido a casa a ejercer su profesión de una manera que hasta ahora nunca habían hecho.Cabe destacar el colectivo de padres. Se han llevado a sus hijos a casa. Los mantienen en casa, e intentan trabajar y ser productivos a pesar de las dificultades que conlleva el tener a alguien que requiere atención constante.Uno ya no sabe si toda esta capacidad viene dada por la necesidad o por saberle poner la mejor actitud. Si tuviera que darle un peso, un porcentaje, a las dos le daría un 90% a la necesidad y un 10% a la actitud. Pero es de ese 10% del que yo quiero hablar.Mi abuelo, el padre de mi madre, que hace ya muchos años que nos dejó, decía que había que sacarle chispas a la vida. Creo que esta frase la respiré en mi casa desde el primer día, y me ha acompañado siempre. Incluso mi padre, el día de mi boda, quiso recordármelo.Cuando me retiré del baloncesto, una de las varias veces que lo hice, un muy buen amigo me escribió en un cuaderno, que me habían preparado entre todos mis compañeros, un texto que no había leído antes, pero que me marcó mucho, de Bertold Brecht:Hay hombres que luchan un día y son buenos. Hay otros que luchan un año y son mejores. Hay quienes luchan muchos años y son muy buenos. Pero hay los que luchan toda la vida: esos son los imprescindibles.Bertold BrechtY es que cada día que paso me doy más cuenta que la actitud es primordial, y que sin ella no valen habilidades ni capacidades.Lo veo y lo comparto con mucha gente a mi alrededor, sin ni siquiera comentarlo. Como un amigo, de hace muchos años, padre de un niño con un gran talento para el tenis que, al ganar éste un torneo (y no son pocos), él destaca orgulloso su actitud. No su talento, sus capacidades, su competitividad…su actitud. Me encanta.Hoy quiero destacar la buena actitud de mis compañeros de trabajo del Sincrotrón ALBA que, en una situación tan compleja, han sido capaces de sumar y ayudar al resto a que este cambio sea lo menos traumático posible, y que siguen contribuyendo y sumando con la mejor actitud. Felicidades! Sigamos sacándole chispas a….todo!Os dejo un video clásico de Emilio Duró, como distracción para pasar estos días de una manera más amena.Feliz Confinamiento!"
    } ,
  
    {
      "title"       : "Testeando una idea",
      "category"    : "",
      "tags"        : "proyectos, servicios, emprender, test",
      "url"         : "./testeando-una-idea.html",
      "date"        : "2019-02-12 08:32:20 +0100",
      "description" : "«Tengo una idea brutal para un negocio, pero no voy a contar muchos detalles porque no quiero que me la roben»",
      "content"     : "«Tengo una idea brutal para un negocio, pero no voy a contar muchos detalles porque no quiero que me la roben»Creo que todos hemos oído una frase como ésta, o hemos sido nosotros mismos los que la hemos dicho.La pregunta es ¿cuántos de nosotros ha llevado a cabo esa idea maravillosa que nos iba a convertir en el próximo Bill Gates, o Jeff Bezos del mundo de los negocios?Y es que emprender, bajo mi óptica, es una aventura fantástica pero requiere de mucha energía, determinación y perseverancia para llevar a cabo aquello que has imaginado. Y lo más importante de todo: mucha valentía. Porque el camino va a ser duro.Hoy en día, los que nos dedicamos al mundo tecnológico, tenemos ciertas ventajas. Probablemente habrá muchos inconvenientes, como que la competencia puede ser feroz, pero hoy voy a focalizar mi atención en dichas ventajas.Hasta hace muy pocos años, el tener una idea que requiriera de algún soporte tecnológico, e intentar llevarla a cabo, era muy costoso. Servidores, servicios varios,… todo tenía un coste nada despreciable.Hoy, con unos euros y probablemente un considerable esfuerzo (la idea maravillosa lo merece, ¿o no?), se puede confirmar o desmentir un nuevo posible negocio tecnológico.Este mismo enfoque se puede dar en lo que se denomina intraemprendimiento (para saber más del concepto, os invito a visitar uno de los posts de quien acuñó el término, Gifford Pinchot, por si os sentís identificados en alguna de las cuatro categorizaciones que hace).Aviso que este post no va de emprendimiento. Va del enfoque tecnológico a una posible idea de negocio, y de las percepciones acerca de barreras que ya no son tan altas como antes.¿QUÉ NECESITO PARA MATERIALIZAR LA IDEA?Para empezar hay que tener muy claro una cosa: tiene que funcionar, pero no tiene que ser el producto perfecto. Al menos, de momento.Hay que tener una visión de producto, aunque sin pretensiones de tener el producto finalizado para ponerse en marcha.Buscamos un MVP, un Producto Viable Mínimo, para arrancar. En estos momentos, no importa si detrás del telón hay alguien moviendo los hilos manualmente. Da igual si no está todo automatizado. El objetivo es saber si a alguien le va a parecer atractivo como para consumirlo en el futuro. Y así justificar el dedicarle más tiempo a desarrollarlo o no.¿CUÁNTO ME VA A COSTAR TODO?Aquí es donde quería llegar. Si el producto es tecnológico, una web o una app, vamos a necesitar algunas cosas. Calculemos lo que nos puede costar testear nuestra idea:El servidorUn Servidor donde hacer correr mi aplicación y/o donde centralizar la base de datos. Hoy hay muchas plataformas muy interesantes de lo que llamamos VPS (Virtual Private Server, o Servidor Virtual Privado). Yo voy a recomendar aquél que uso: Digital Ocean.Pongamos que nos damos 3 meses para empezar a poner en marcha el proyecto. Pues bien, el coste de un proyecto pequeño es de entre $5 y $20 al mes. Con lo que el servidor nos va a costar $60 si queremos uno solo (yendo a máximos). Habrá la necesidad de tener otros entornos, pero podemos ser flexibles en cuanto a las dimensiones de los diferentes entorno: $15 para producción y $10 para pruebas, por ejemplo. Total $75 ($25 al mes). Muy asumible.El dominio y la cuenta de e-mailTambién querré un dominio, con un nombre asociado. De la imagen de marca y de todo lo demás, lo dejaría para los profesionales de la comunicación y el diseño. Ellos sabrán mucho mejor qué hacer y cómo.Como siempre hay varios proveedores de dominio, y aquí no me voy a mojar demasiado. Los hay muy buenos, y a muy buen precio. El precio ronda los 12€ al año.También querré una cuenta de e-mail. Yo recomiendo Google Suite como herramienta. Por sólo $5 al mes podemos disfrutar del mail, de chat, de calendario, además de una suite interesante de aplicaciones de gestión y, además, ¿quién no tiene una cuenta de Gmail? La curva de aprendizaje es prácticamente nula.No podemos obviar la seguridadCon la seguridad en Internet no se puede jugar. Es por ello que hay que asegurarse de hacer nuestra plataforma lo más segura posible.Para ello es importante contar con una web/app que funcione con protocolo HTTPS. Para ello necesitamos un certificado SSL, el cual podemos obtener de manera totalmente gratuita en la plataforma Let’s encrypt.En los proyectos en los que he participado, y sin tener un argumento más allá del servicio que ofrecen, he intentado utilizar otros proveedores de SSL comerciales, ya que me facilitan un soporte y unas garantías (por contrato) que considero importante.Los precios de un certificado SSL hoy en día se mueven por los 15€ al año para proyectos sencillos.La gestión de los e-mails y las notificacionesLas campañas de marketing y envíos varios de e-mails son muy importantes, y probablemente sea algo que nos pidan nada más empezar el proyecto.En mi caso, tengo muy buena experiencia con Sendgrid. Y es que mediante un plan de iniciación, el coste es gratuito para un número envíos de e-mails mensual inferior a 12,000. Y si queremos enviar hasta 40,000 cada mes, el coste es de 15€. Habrá más, pero lo cierto es que estoy muy satisfecho con el servicio hasta el momento.El ProductoTeniendo todos los servicios y productos externos identificados, me atreviría a decir accesorios, nos queda desarrollar el producto.El MVP ha sido decidido, con lo que queda decidir con qué tecnologías hay que desarrollarlo.En mi caso, los criterios principales que utilizo son 2: ¿Con qué tecnologías tiene experiencia el equipo (o yo mismo si el proyecto es personal)? ¿Hay una comunidad fuerte en esta tecnología que me «garantice» que no voy a tener que reescribir el proyecto por falta de soporte en los próximos 3 años, por ejemplo?¿Dónde guardo el código?Mantener el código, y sus versiones, accesible para el equipo es muy importante. Para mí hay dos opciones: Bitbucket, cuyo plan gratuito permite repositorios privados para equipos de hasta 5 personas; y Github, que tiene un plan similar (los privados ahora también son gratuitos) pero para hasta 3 personas.Tanto Bitbucket (soy muy fan de los productos Atlassian – Jira y Confluence los utilizo a diario, además de Trello) como Github me parecen grandes servicios. Cualquiera de los dos es una apuesta segura.El coste totalTeniendo en cuenta que hemos dicho que testearíamos nuestra idea durante 3 meses, añadimos una previsión (optimista) hasta los 6 meses y eliminando cualquier otro aspecto que no sea puramente las herramientas a usar tenemos: El cambio a fecha de hoy (11/02/2019) es 1 Dolar = 0.88 Euros** Suponemos que enviamos más de 40,000 e-mails a partir del mes 4.Recuerdo que la intención de este post es destacar herramientas que podemos usar para testear nuestra idea sin arriesgar mucho dinero.Bonus trackMe dejo muchas herramientas. Algunas no las considero críticas para esta fase, pero es muy interesante conocerlas en el caso en el que deseemos ir más allá: CircleCI (Integración Continua) o Sentry (Tracking de errores) son algunos ejemplos (aunque debo admitir que no tengo mucha experiencia aún con ellos).¿MI IDEA VALE LA PENA?Sabiendo ahora que las barreras (de coste) no son tan altas, sólo nos queda preguntarnos si vale la pena ponernos manos a la obra y testear la idea. Las preguntas que suelo hacerme cuando se trata de este tipo de proyectos son:¿Tiene sentido? ¿Es el mejor proyecto al que nos podemos comprometer ahora mismo? ¿Tenemos el apoyo suficiente?Son preguntas muy relevantes a la hora de tomar la decisión de continuar por un lado u otro. Tanto si es un proyecto personal como si es uno profesional.Es posible que le vayamos a dedicar mucho tiempo. Es bueno valorar qué consecuencias puede tener «meterse».RECAPITULANDODefinir una Visión de Producto. ¿Cómo queremos que sea nuestro producto final?Definir un MVP. La mínima expresión de Producto que tenga sentido por sí sola.Identificar las necesidades tecnológicas y utilizar sólo aquellos recursos que sean imprescindibles, y valorar el coste según lo necesario a corto y medio plazo.Desarrollar la idea. Ánimo! Creo que es la parte más dificil ya que vamos a necesitar dedicarle tiempo, probablemente el tiempo libre, para poder tener algo funcionando.Teniendo esta información en la mano, quizás no nos queden excusas para poder llevar a cabo esa idea fantástica. 🙂Os deseo una feliz semana!"
    } ,
  
    {
      "title"       : "Salvar un proyecto: Bug fixing, refactoring, rewriting",
      "category"    : "",
      "tags"        : "proyectos, bug fixing, tecnologia, cto",
      "url"         : "./salvar-un-proyecto-bug-fixing-refactoring-rewriting.html",
      "date"        : "2019-02-04 08:32:20 +0100",
      "description" : "Es difícil no caer inmediatamente en la tentación de visualizar cómo sería el mismo proyecto, usando «una tecnología como tiene que ser, y no la que tenemos ahora, que es un dolor de cabeza«.",
      "content"     : "Hace unos años, cuando aún jugaba a baloncesto y me encontraba ya alrededor de los treinta, solía repetir una frase que indicaba claramente que ya estaba dando los últimos coletazos.«Me encantaría volver a tener veinte años, pero sabiendo lo que sé ahora»Y es que, metáforas deportivas aparte, uno mira hacia atrás y probablemente habrá una serie de decisiones que hubiera tomado de distinta manera de saber qué consecuencias futuras le esperaban.Es obvio que uno toma las mejores decisiones basándose en la información que tiene en el momento en el que la tiene. Con lo que mirar al pasado, con la idea de lo que se pudo hacer y no se hizo, no tiene ningún sentido. Y, sin embargo, lo hacemos (al menos yo!).EL DILEMAEso mismo pasa, a mi entender, con un proyecto de software. Pasados unos años, después de haber lanzado con cierto éxito un producto, y haberlo hecho evolucionar, siempre llega el momento en el que se plantean varias opciones:¿hay que seguir dando soporte, mediante bug fixing, y evolutivos? ¿debemos detectar aquellas partes del código en las que podamos mejorar la eficiencia, tanto a nivel de rendimiento como a nivel de arquitectura, para hacerlo más manejable? ¿o ya no queda otra opción que la de reescribir todo el proyecto?Cuando se tiene esta conversación, se detectan rápidamente las diferentes posturas:LA PERSPECTIVA DEL EQUIPO DE DESARROLLOEl equipo de desarrollo, quien se «pelea» con el producto cada vez que tiene que añadirle alguna funcionalidad más o arreglar algún error (también conocido como bug), interpreta esta situación como la oportunidad de manifestar su frustración por tener que lidiar con semejante carga.La cantidad de nuevos frameworks de desarrollo, que hacen el trabajo mucho más eficiente que los tradicionales, hacen efecto llamada para cualquiera que quiera estar al día.Blogs y plataformas muy conocidas hacen análisis de qué frameworks son los mejores para trabajar, como la plataforma de Medium, a la que estoy suscrito y recomiendo totalmente, en los que te dicen cómo hacer el CodingTheSmartWay, o las listas de frameworks en HakerNoon (también muy interesante) para el 2019.Es difícil no caer inmediatamente en la tentación de visualizar cómo sería el mismo proyecto, usando «una tecnología como tiene que ser, y no la que tenemos ahora, que es un dolor de cabeza«.LA PERSPECTIVA DEL RESPONSABLE DEL EQUIPODe igual modo que existe la postura del «hay que hacerlo por el bien del proyecto», personificada en el equipo de desarrollo, existe la postura del conservador. Ésta suele ser representada por el responsable del departamento, el CTO, o el nombre que le haya dado la empresa a quien toma las decisiones acerca de a qué proyectos hay que darles foco.Generalmente, el CTO es reacio a reescribir un producto, por el simple hecho de que requiere un esfuerzo muy grande para estar en el mismo sitio, y no ofrecer un valor añadido palpable (¿os suena el concepto de Coste de Oportunidad?)Existe otros factores a tener en cuenta. Como por ejemplo que, a priori, no existe ninguna garantía de que una reescritura del producto vaya a solucionar el problema al que ya se está enfrentando el departamento.Si en su momento se tomó una serie de decisiones a nivel de tecnología, y ha resultado no ser 100% sostenible, ¿qué nos hace pensar que la siguiente decisión vaya a serlo? ¿nos encontraremos con el mismo dilema dentro de un tiempo? ¿Los frameworks de moda hoy, seguirán siendo soportados en los próximos años?LOS CRITERIOSEntendiendo que el factor emocional, frustración por un lado e incertidumbre por el otro, no debe ser obviado en ningún caso tenemos la ocasión de aplicarle cierta lógica al asunto, por parte de ambas posturas.El objetivo (purpose) del productoDestaco una obviedad, pero no por ello debo dejar de mencionarlo: un producto que no cumple con su objetivo debe ser replanteado de inmediato.Es el motivo más fuerte por el que hay que reescribirlo. Entrará en desuso de un momento a otro. Es muy importante recabar las métricas adecuadas para saber si eso ya ha pasado o no.El factor de deuda técnica (Technical Debt)La definición que podemos encontrar en la Wikipedia es el coste en tiempo de reescribir, esta vez correctamente, una porción de código que no es eficiente o correcta, y que puede acarrear consecuencias en el futuro de la aplicación.Bajo mi punto de vista, es importante hacer una lectura objectiva de cuánto estamos hablando.Uno de los muchos artículos que hay por Internet acerca del tema, hace referencia a precisamente eso: What Technical Debt Is and How to Calculate It.Así que la recomendación es poner el código bajo análisis, usando herramientas como SonarQube, y ver qué lectura hace de nuestro proyecto.Dicha herramienta utiliza la metodología SQALE (Software Quality Assessment based on Lifecycle Expectations) para elaborar un ratio de estimación de coste de arreglar el código defectuoso, en comparación a reescribir el proyecto entero. (más info aquí).Conocer, en números, cuál es nuestra deuda técnica es un criterio fuerte a la hora de tomar la decisión de rehacer un producto.La arquitecturaHoy en día se puede cambiar un producto software web, sin necesidad de prescindir de todo el software desarrollado.A la ya conocidísima arquitectura MVC, se añade las MVP y MVVM, aunque MVC siempre ha sido la más popular. Y luego tenemos la opción de REST APIs, para una arquitectura de BackEnd y FrontEnd, y los micro servicios… un sinfín de posibilidades.Aunque el impulso sea el de «tirarlo todo a la basura y empezar de nuevo», es importante valorar la posibilidad de mantener cierto core de la aplicación, y decidir qué parte es la que se puede reescribir, refactorizar o, simplemente, actualizar.El TCO (Total Cost of Ownership)Sabemos que el TCO de un producto es el coste desde que escribimos la primera linea de código, hasta que desmantelamos la aplicación, o la sustituímos.Siendo muy poco estrictos, y teniendo en cuenta que lo que se plantea aquí es sustituir el producto por otro con la misma necesidad de recursos (Servidores, red, electricidad… ), el factor diferencial es el coste operativo relacionado con la estabilidad (si ese puede ser un factor), y los costes futuros de evolutivos y actualizaciones.Bajo mi punto de vista, diferenciar entre el producto actual y la «promesa» del producto futuro, es una mera adivinación. Hay tantos factores que no están bajo nuestro control, que nos es imposible predecir si estamos tomando la mejor decisión bajo este criterio o no.La expertise del equipo de desarrolloUn factor clave. Si el equipo de desarrollo desconoce la tecnología que hay detrás de un producto, hay que ponerle remedio.La primera opción es incorporar, si eso es posible, a alguien con el conocimiento adecuado en dicha tecnología.De no ser posible incorporarlo, hay que formar a alguien del equipo para que adquiera ese conocimiento. Y si es más de uno, mejor. Y aquí interviene el factor motivacional.La motivación del equipo¿A quién le interesa aprender una tecnología que no está de moda? ¿O que es difícil de aprender? ¿Quién quiere invertir tiempo en una habilidad que no es buscada en el mercado?Es imposible no tener en cuenta este aspecto en la toma de decisiones. Pero también es necesario saber que éste no debe ser el aspecto que haga decantar la balanza hacia una reescritura del producto.CONCLUSIONESComo en el 99,9% de los casos, no hay negros ni blancos. Hay toda una gama de grises a tener en cuenta.No únicamente por factores económicos vamos a dejar de obviar un mensaje que nos está llegando del equipo de desarrollo. Probablemente tengan un criterio tecnológico acertado a la hora de plantear el problema.Pero tampoco debemos dejarnos llevar por factores emocionales, de frustración.Dentro de esa extensa gama de grises, habrá soluciones que puedan satisfacer todos los criterios. Probablemente no lo hará al 100% en todos los casos, pero se acercará.Monitorizar la deuda técnica; separar las diferentes capas de la arquitectura; ofrecer alternativas que permitan modernizar el producto sin necesidad de tener que renovarlo todo… son alternativas a tener muy en cuenta. Hay que ser creativos a la hora de plantear una solución.Es un reto bonito al que se enfrentan tanto el equipo de desarrollo como su responsable.¡Ánimo en la búsqueda de grises!Feliz semana!"
    } ,
  
    {
      "title"       : "Vocación de servicio",
      "category"    : "",
      "tags"        : "servicios",
      "url"         : "./la-vocacion-de-servicio.html",
      "date"        : "2019-01-28 08:32:20 +0100",
      "description" : "La ventaja competitiva de cualquier organización es si capacidad de entregar servicios más allá de lo que espera el cliente.",
      "content"     : "Los que estamos en el mundo de la tecnología tenemos una cosa muy clara. Cualquier producto o servicio que creemos o gestionemos tiene un sólo objetivo: que alguien lo consuma.No importa qué hagamos, ni qué tecnología usemos para llevar a cabo nuestra misión. Al usuario no le importa. Lo que quiere es que lo que compre o use, o compre y use, funcione como él espera que lo haga.Y nuestro trabajo es conseguir precisamente eso, además de ser eficientes en el intento. Y en ese intento viene la importancia de la tecnología a utilizar; la arquitectura a aplicar; etc…Hace unos años, no muchos, estuve en una clase de Dirección Comercial. En una de las muchas sesiones que tuve acerca de este tema, una mensaje me quedó grabado:Las empresas pueden ser competitivas por tres motivos: calidad de producto; precio; o intimidad con el cliente.Cuando hablamos de la calidad del producto, y la extrapolamos al servicio que nosotros damos o a los productos que hacemos, hay muchas interpretaciones que uno podría hacer.Dejando de lado la calidad como concepto de confiabilidad (reliability, en inglés), y dando por sentado que ése no es un factor diferencial, el concepto de calidad lo interpreto como los atributos del producto o servicio, y de las preferencias del usuario. Algo totalmente subjetivo, y cuya responsabilidad recae en Departamento de Marketing (en el caso en el que exista) a la hora de descubrir necesidades y preferencias.Por lo que a precio se refiere, hoy en día los servicios de Computing, por llamarlo así, sufren una competencia feroz.En cualquier ámbito, en cualquier sector, empresas grandes y pequeñas ofrecen servicios cada días más completos y a precios cada año más competitivos. Hay poca diferenciación, en realidad, que pueda ser percibida por parte del usuario. A no ser que tengas algo, un atributo, que realmente marque la diferencia.Para finalizar, nos queda la intimidad con el cliente. El factor menos medible de los 3, por ser el más subjetivo. Y hay miles de métricas asociadas a la calidad del servicio en asociación a la satisfación del usuario. Existen las medibles objetivamente (tiempos de respuesta, de resolución,…) y las que son subjetivas, como las encuestas telefónicas, formularios on-line…¿Cuántas veces hemos tenido una relación comercial, y nos han dicho que nos llamarán del servicio de atención al cliente? ¿Cuántas veces nos han explicado que tienen que llegar a niveles de mínimo 9 sobre 10 para conseguir sus objetivos?Pues bien, mi opinión es que precisamente éste debería ser el factor que tengamos más en cuenta.En nuestro día a día, nuestro trato con el usuario debe ser exquisito. Y ya no hablo del «Por favor» y el «Gracias», desde mi punto de vista algo elemental en el trato personal.Hablo de hacer un ejercicio de empatía para ponerse en su lugar, entender su frustración (si la hay) e intentar obtener una solución que satisfaga sus necesidades, y gestionando también sus expectativas.Siempre dentro del ámbito del servicio ofrecido, claro.La vocación de servicio es una cualidad diferencial que cualquier miembro de cualquier departamento debe tener. Incluído el tecnológico.Que tengáis una feliz semana! 😉"
    } ,
  
    {
      "title"       : "PRINCE2 y Scrum: una propuesta de encaje",
      "category"    : "",
      "tags"        : "proyectos, agile, PRINCE2",
      "url"         : "./prince2-y-scrum-una-propuesta-de-encaje.html",
      "date"        : "2019-01-22 08:32:20 +0100",
      "description" : "La dirección y la ejecución de un proyecto son aspectos distintos de la gestión. Aquí tenéis una propuesta en la que se encajan lo mejor de PRINCE2 y Scrum.",
      "content"     : "A lo largo del año se gestionan muchos proyectos. Muchos de ellos en paralelo.En nuestro caso, los proyectos son tan singulares que se inician muchas veces con un grado de incertidumbre relativamente elevado. Los motivos son varios, y probablemente haya espacio de mejora para reducir esta incertidumbre, pero en ocasiones no es evitable. Así que hacemos nuestro mejor esfuerzo por planificar con toda la información que tenemos.La organización a la que pertenecemos tiene por objetivo final proporcionar herramientas para la investigación científica, con lo que llevamos la innovación en el ADN, y eso se respira en todos los Departamentos. La incertidumbre es, por tanto, habitual.¿POR QUÉ PRINCE2?Como bien se sabe, todo nuevo proyecto debe de tener 4 variables principales a tener en cuenta: Coste (monetario o en personal), Alcance (o Scope), Calidad y Cantidad.El elemento escaso en esta situación es el coste, y en especial el tiempo (la gran mayoría de nuestros proyectos los hacemos in-house), y hay que hacer buen uso de él para llegar a nuestro objetivo: proporcionar las herramientas y los servicios de la mayor calidad posible.Estaba claro que necesitábamos una metodología para asegurarnos de que seguíamos las buenas prácticas de gestión de proyectos. Elegimos PRINCE2.Nos gustó PRINCE2 (PRojects IN a Controlled Environment) porque, además de ser mundialmente conocido, nos daba cierto orden y estructura a la hora de implementar aquella lista (creciente) de proyectos que teníamos en la mesa. Se basa en 7 principios que se ajustan muy bien a nuestro caso en particular:Justificación continua del negocio: el proyecto tiene que tener sentido para el negocio en cualquier estado de progreso.Aprendizaje basado en la experiencia: A cada nuevo proyecto, el conocimiento adquirido por el equipo en el pasado debe tomarse en consideración.Roles y responsabilidades definidos: saber quién hace qué puede parecer una obviedad. Pero es necesario formalizarlo para evitar confusiones y malos entendidos.Gestión por fases (stages): La planificación en detalle a meses vista se ha demostrado muy poco realista y ha supuesto un overhead inasumible para cualquier equipo en el pasado.Gestión por excepciones: En cualquier momento en el que suceda un evento inesperado que afecte al proyecto, el impacto debe ser evaluado y corregido de manera inmediata.Orientado a productos: Las tareas a realizar deben estar enfocadas a conseguir un producto final.Customización (o Tailoring) al entorno del proyecto: No todos los procesos de la metodología son necesarios para llevar a cabo PRINCE2. Es perfectamente adaptable a las necesidades y recursos que tenga la organización.LOS PROBLEMAS EN EL TAILORINGDespués de varios años poniendo en práctica esta metodología se vio que, a pesar de haber intentado hacerlo lo más ligero posible, el proceso de planificación y formalización de proyecto muchas veces llegaba a un nivel de detalle que muchas veces (la mayoría) nunca llegaba a cumplirse, obligando a replanificar varias veces durante la ejecución del proyecto.Es decir, en el entorno tan cambiante en el que uno se mueve, es muy difícil hacer una previsión a 5-6 meses vista, si no se tiene la seguridad de que la dedicación al proyecto va a ser constante, por poner un ejemplo.Y, ¿cómo se mantiene cierto control sobre los esfuerzos, habiendo tanta incertidumbre a medio plazo?Se estuvo investigando qué práctica podía ser la más beneficiosa, y cómo se debía aplicar, sin perder todo el conocimiento previo adquirido.PRINCE2 seguía siendo válido, pero faltaba mejorar en la fase de ejecución del proyecto.EL SETUP DEL PROYECTO: DIRECCIÓN VS EJECUCIÓNSe decidió mantener PRINCE2 en la Dirección de Proyecto. La formalización del proyecto y el apoyo de Management son dos aspectos primordiales para asegurar su éxito.Se mantuvo la justificación con el Business Case: hacer el ejercicio de para qué se va a ejecutar el proyecto; qué beneficios se pretenden; y qué coste va a suponer.Después, se solicita una lista de atributos/funcionalidades del producto que se quiere implementar. Una guía acerca de lo que se espera obtener, ordenado de más prioritario a menos (lo que solemos llamar deseable), este último con muchas probabilidades de quedar fuera del proyecto.Los elementos de esta lista serán los que finalmente se conviertan en épicas en el proyecto de Scrum.Y luego se acuerda un coste. Un compromiso por parte del equipo, que se traduce en horas de dedicación. Cabe recordar la historia del cerdo y la gallina, que ilustra bastante bien la definición de compromiso.Ilustración de la diferencia entre implicación y compromiso. Fuente: https://inviqa.com/blog/why-agile-community-still-calling-you-%E2%80%98chicken%E2%80%99Durante la fase inicial del proyecto, también llamada pre-proyecto, se define qué se va a hacer y quién participa en el proyecto, además del mencionado Business Case.Se acuerdan procesos de gestión de riesgos, de comunicación, de cambios o configuración y de calidad.Se identifica al Project Board: los sponsors y principales stakeholders del proyecto. Son los máximos interesados en su éxito, y los que proporcionan los recursos para ejecutarlo.La Dirección de Proyectos, aplicando la metodología PRINCE2, e integrándola con Scrum.El tiempo de dedicación y el coste son los parámetros fijos en todo el proceso de ejecución.LA EJECUCIÓN DEL PROYECTO: TRADUCIENDO PRINCE2 A SCRUMY, finalmente, llega el día en el que se inicia la Ejecución del proyecto en Scrum.Se desglosan las épicas en historias en el Sprint Planning. Se definen los objetivos de cada Sprint alineándolos con los objetivos del proyecto PRINCE2Y se identifica el MVP (Minimum Viable Product): la primera versión publicable del producto.La Ejecución de Proyectos en Scrum, integrándola con PRINCE2. Esquema ideal.Durante el tiempo que dura un sprint, y en caso de ser necesario, existe el recurso del Exception Report, que se encuentra en PRINCE2. Su objetivo es el de comunicar cualquier incidente relevante que pueda impactar en el proyecto y su resultado.El objetivo de Exception Report es el de pedir feedback al Project Board acerca de un imprevisto. No sólo se trata de informar del problema. Hay que detallarlo, presentar las diferentes alternativas, habiéndolas evaluado antes, y una ofrecer recomendación. El PB debe tomar la decisión en función de la información proporcionada.Un error en la planificación del tiempo, o del coste; o un cambio de objetivo en el proyecto pueden ser motivos para lanzar un Exception Report y solicitar al Project Board una nueva evaluación del proyecto, ya sea para tener más recursos, o para considerar su viabilidad y su justificación para el negocio.Por supuesto, un impedimento cuyo impacto no se considera mayor, no se incluye en el proceso de comunicar una excepción. Y sólo se considera excepción si tanto el Product Owner como el Scrum Master así lo acuerdan.Se finaliza el Sprint con el Sprint Review, en el que se evalúa el progreso, y se decide si el resultado del sprint es publicable (Potentially releasable product increment) o no. Se hace el Sprint Retrospective, en el que se trata el cómo puede mejorar el equipo de Scrum. Y, se redacta un Highlight Report.El Highlight report tiene por destinatario final el Project Board que participa en el proyecto.El Highligh Report es la herramienta principal de control del PB, y en el que se le da información acerca del estado de progreso del proyecto, los siguientes pasos a realizar…y, eventualmente, se le puede pedir feedback para continuar.EL MAPEO DE LOS ROLESEn nuestro caso particular, el Project Manager de PRINCE2 suele actuar como Product Owner en el proyecto Scrum. No gestiona directamente las tareas del equipo de Scrum, sino que asegura el valor de negocio del producto que está desarrollando.El Scrum Master tiene el rol de Team Manager de PRINCE2 por su grado de responsabilidad en cuanto a facilitador.No se trata de un mapeo directo: tanto el Product Owner como el Scrum Master asume su responsabilidad y toma algunas responsabilidades más que le exige PRINCE2 en calidad de Project Manager o Team ManagerLos demás roles se mantienen cada uno en su metodología o frameworkEL ESQUEMA FINALLa adaptación propuesta de integración entre PRINCE2 y Scrum.Aquí os dejo con la tabla de correspondencias/complementariedades entre PRINCE2 y Scrum.Tabla de correspondencia y complementariedad de roles, eventos, procesos, artefactos…entre PRINCE2 y ScrumEL RESULTADOLos beneficios obtenidos hasta ahora con respecto a esta integración han sido varios:El Business Case se mantiene como elemento clave para justificar el go o no-go de un proyecto, a pesar de no tener hasta el último detalle del Cómo se va a implementar.Los sistemas de control del progreso del proyecto son mucho más visibles. El nivel de detalle para el seguimiento del proyecto es accesible para cualquiera que participe en él (recordando los tres pilares de Scrum: Transparencia, Inspección y Adaptación)La gestión de los cambios es más visible y trackeable (aunque exige de un esfuerzo extra). Sólo se tratan como excepcionales aquellos cambios que son contrarios a las grandes funcionalidades definidas en PRINCE2, y traducidas a épicas. El overhead es mucho menor.En el caso de múltiples proyectos en paralelo, nos ayuda a la priorización. Qué hacer y cuándo hacerlo es importante para el equipo, y para los stakeholders y sponsors. Permite una gestión de la expectativa más realista.En cualquiera de los casos, y como siempre, se trata de un proceso de mejora continua. Y aún hay mucho trabajo para encajar todas las piezas que integran ambos frameworks y metodologías.Pero es un comienzo.Feliz semana!Os dejo con un enlace a un video corto, que explica cómo funciona PRINCE2."
    } ,
  
    {
      "title"       : "Métricas: lo que nuestros usuarios no nos dicen",
      "category"    : "",
      "tags"        : "servicios, proyectos, kpi",
      "url"         : "./metricas-lo-que-nuestros-usuarios-no-nos-dicen.html",
      "date"        : "2019-01-14 08:32:20 +0100",
      "description" : "La relevancia de medir los servicios y su uso es crítico para mantener un catálogo actualizado y dedicar los esfuerzos a lo que nos da valor.",
      "content"     : "Antes de empezar a explicar la historia, debes saber que en nuestra lista de productos y servicios, se diferencia entre los servicios de gestión interna, la mayoría de ellos, y otras plataformas para nuestros usuarios externos, con un uso mucho más intenso a nivel de volumen, pero también estacional.Tenemos una lista de proyectos en nuestro Pipeline prácticamente inacabable. Con lo que cuando terminamos un proyecto, y lo publicamos, iniciamos el siguiente (si no lo hemos hecho antes).Hace unos años tuve una de esas reuniones con un colega de trabajo en las que me di cuenta de que algo no estábamos haciendo bien.(colega) «Buenos días Daniel. Mira, quería hablar contigo porque desde nuestro departamento, necesitamos una herramienta de gestión de inventario. Queremos algo simple pero con unas funcionalidades muy concretas, y no hemos encontrado nada en el mercado que nos convenza. ¿Tu equipo y tú podríais evaluar esta necesidad y añadirla a vuestro Pipeline de proyectos?»(yo) «¡Claro! Pero sabes que tenemos una aplicación que ya cubre con vuestras necesidades, ¿verdad? De hecho, la desarrollamos para una de vuestras team leaders. La que se marchó hace unos meses.»(colega) «Sí, la conozco….y tenemos todos los ítems introducidos….pero desde que ella se fue, no la utilizamos.»(yo) «¿Queréis que os expliquemos cómo funciona? Quizás faltó este punto en el traspaso de conocimiento.»(colega) «No creo que la vayamos a utilizar. La interfaz es anticuada y no es funcional. Desde hace 6 meses, gestionamos el inventario con Excel.»Mi cara de sorpresa fue mayúscula.¡Teníamos una aplicación de gestión de la información que no cumplía las expectativas de los usuarios, habían dejado de usarla, y nosotros no lo sabíamos!Muchas horas de desarrollo, de customización, habíamos desarrollado la herramienta perfecta…para una sola persona. Y esa persona ya no estaba en la empresa.Enseguida nos pusimos a evaluar la necesidad de implementar un nuevo proyecto de gestión de inventario. Nos dimos cuenta de que no había sólo un departamento buscando este tipo de sistemas de gestión: ¡había cuatro!Los involucramos a todos. Decidimos hacer nuestro primer experimento con Scrum. El equipo estuvo motivado, y focalizado en el proyecto. Fue un trabajo en equipo con muy buenas sensaciones, y el punto de partida para plantear seriamente un cambio en nuestra manera de trabajar.A finales del proyecto ya se habían sumado dos departamentos más y, hoy en día, siguen sumándose.Pero yo seguí preocupado por nuestra ceguera en cómo se usaban nuestras aplicaciones.Hasta el momento, habíamos confiado en el feedback del usuario. Pero no podemos esperar que el usuario siempre nos esté diciendo qué usa, cómo lo usa y cuándo. Aunque se trate de aplicaciones internas.Nos decidimos incorporar la funcionalidad del tracking en todo proyecto nuevo que entraba. Por cuestiones de trazabilidad y de seguridad (para recuperar algún dato perdido).Esa parte fue simple: buscamos las librerías que mejor se adaptaban a nuestra tecnología y las incorporamos. Así que todo nuevo proyecto tiene, por defecto, esa configuración.Hoy cualquier reserva de material, cambio de stock, o gestión de datos queda registrado en el sistema, sabiendo quién y cuándo se ha hecho.Conocer el impacto de desarrollos internos dentro de la organización y su intensidad de uso, evaluándolo de manera aislada o incluso comparativamente con respecto a otros servicios, nos permite tomar mejores decisiones a la hora de planificar nuestro programa de proyectos.No nos podemos quedar en la entrega del producto, y esperar pasivamente a que nos den feedback. El seguimiento debe ser proactivo.Hasta entonces, el único seguimiento que habíamos hecho era la gestión de la disponibilidad, de la capacidad, de problemas o de incidencias.Me resultó curioso comprobar cómo nos habíamos involucrado en el negocio para definir los procesos con el usuario; acompañarlo a la hora de diseñarlo y priorizarlo…y cuando lo publicamos, sólo nos enfocamos en cuestiones meramente operativas.Mi opinión es que hay que ir más allá. Descubrir qué funcionalidades son las más usadas, cuáles no lo son y por qué. Esto puede parecer obvio para un producto de uso comercial o cualquier plataforma web. No lo ha sido hasta ahora para un producto interno. Y es un factor de decisión importante a la hora de valorar si se le dedica más esfuerzos o no.Hoy en día seguimos definiendo métricas que nos ayuden a tomar mejores decisiones; a enfocar los esfuerzos en lo importante y a dar más valor añadido a nuestra organización.Os dejo con una referencia a un libro que me recomendaron: Metrics: How to Improve Key Business Results, de Martin Klubeck. Un libro que me está gustando mucho. Ya os comentaré más en cuanto lo acabe.Feliz Semana!"
    } ,
  
    {
      "title"       : "Ticket Fest: La historia de un éxito a medias",
      "category"    : "",
      "tags"        : "servicios, proyectos",
      "url"         : "./ticket-fest-la-historia-de-un-exito-a-medias.html",
      "date"        : "2019-01-07 08:32:20 +0100",
      "description" : "Cuando los equipos trabajan Proyectos y Servicios, gestionar ambas actividades a veces puede suponer un reto important.",
      "content"     : "Una de las funciones que considero más relevantes en mi responsabilidad es la de asegurar el correcto tratamiento de todas aquellas peticiones de servicio que nos «entran» en la sección (así llamamos a nuestro departamento).En una sola frase, mi objetivo prioritario (en esta faceta) es la de mantener un alto nivel de servicio. Y por «alto» me refiero al hecho de atender las peticiones en un tiempo determinado.EL CONTEXTOY es que ya hemos aceptado que los productos que ofrecemos no son a prueba de bomba:Si tu #producto no es perfecto, y nunca lo es, haz que tu #servicio sea #excelente. #ReflexionesDeViernes— Daniel Salvat (@danielsalvat) May 4, 2018La manera de mantener el nivel de servicio que considerábamos óptimo debía tener en cuenta varios factores:El equipo que atiende el Service Desk, es el mismo que el que desarrolla los productos. Con lo que en raras ocasiones hay un 100% de dedicación a una cosa o a otra. De hecho, nuestra realidad es 40% Service Desk, 60% Desarrollo.No todas las peticiones de servicio tienen el mismo nivel de criticidad. En otro post, procuraré explicar qué usamos para decidir qué peticiones nos hacen dejarlo todo para atenderlas.Existen objetivos y prioridades en otros proyectos, definidos a nivel de organización, que entran en conflicto en cuanto a necesidades de dedicación por parte del equipo.No todos los miembros del equipo tienen el mismo expertise. Este factor era crucial para nosotros, porque el experto se convierte en el cuello de botella de todo el proceso. Un problema que debíamos resolver.LOS CRITERIOSDadas estas condiciones, decidimos aplicar unos criterios muy concretos:Priorizar peticiones de servicio relacionados principalmente con accesos e incidentes. El resto de peticiones serían evaluadas y tratadas en cuanto fuera posible en base a su priorización. Se buscaba, mediante este criterio, cumplir con dos objetivos:Externamente: Asegurar la continuidad del negocio en cualquier de los servicios que se ofrece.Internamente: Evitar la pérdida de foco y la inherente pérdida de tiempo que conlleva el cambio de contexto provocado por la atención a la petición.Sólo dejar «pasar» como prioritarias aquellas peticiones que se consideraban estratégicas.Inevitablemente, requiere de cierta negociación y entendimiento de cuáles son las necesidades.En caso de dudas o desacuerdos, estas peticiones debían escalarse.Mediante estos criterios, se buscaba mejorar la eficiencia del equipo y, por qué no decirlo, reducir el estrés que supone ir cambiando de contexto continuamente, con la consecuente sensación de no ir avanzando en los proyectos asignados.LA IMPLEMENTACIÓNNos decidimos a organizar una Ticket Fest: una semana en la que el equipo «congelaba» las actividades relacionadas con los proyectos en curso, y se dedicaba a evaluar todas aquellas peticiones de servicio que habían quedado a la espera de ser planificadas: Cambios; Problemas de baja prioridad; Mantenimientos…Ocurriría cada 6 semanas, y el lunes de Ticket Fest revisábamos las peticiones para darles salida.Al principio, la situación no era muy crítica. Teníamos un backlog pequeño de cambios (alrededor de 50) de varios servicios a tratar. Lo consideramos muy gestionable.Cada 6 semanas, lográbamos reducir el backlog en 10-15 peticiones, que se recuperaban rápidamente al pasar las 6 semanas siguientes. Así que el que tenía peticiones de baja prioridad podía tardar 6 meses en que se le solucionara la petición (debo admitir que hay algunas que tienen mucho más tiempo de espera). Y eso no era óptimo, ni mucho menos. Pero la petición tampoco lo requería.Pero para peticiones de criticidad media, funcionaba. Hasta que fuimos creciendo como organización, duplicando staff, y en catálogo de servicios, que también duplicamos.El backlog de los Ticket Fest empezaba a crecer sin que pudiéramos dar salida ni a las peticiones de nivel medio. El Ticket Fest ya no funcionaba.LA CONCLUSIÓNEn un contexto en el que no hay un equipo de 1er o de 2o nivel de servicio, y todo lo hace el mismo equipo, que además desarrolla nuevos proyectos, el cambio de contexto es vital para su salud. Hay que buscar soluciones y continuamente monitorizar sus implementaciones.Tratar peticiones de servicio de media/baja prioridad en un periodo planificado de tiempo es una buena solución mientras sea sostenible. Cuando la peticiones aumentan, el número de usuarios también, y los servicios a gestionar son numerosos, el sistema empieza a volverse inestable e ineficiente.Incorporar las peticiones de cambio no urgentes, o problemas de bajo impacto, en una planificación de Sprint (Sprint Planning), y tratar como historias este tipo de peticiones de servicio nos permite estar atentos a dichas peticiones en un periodo más reducido (hacemos sprints de 3 semanas, con lo que el tiempo de atención a la petición puede reducirse a la mitad con respecto al Ticket Fest).Proteger al equipo de entradas de peticiones, y por tanto interrupciones, reduce el cambio de contexto y permite conseguir un foco mucho más efectivo.Después más de un año de incorporar la gestión del cambio y de problemas a nuestra planificación ágil, el resultado lo podéis ver en el post de hace unas semanas: El año que nos volvimos ágiles….o noFeliz vuelta al trabajo!"
    } ,
  
    {
      "title"       : "1 Producto, 1 Repositorio: El Error de los Departamentos de IT en su gestión de Servicios",
      "category"    : "",
      "tags"        : "cto, servicios, clientes",
      "url"         : "./1-producto-1-repositorio-el-error-de-los-departamentos-de-it-en-su-gestion-de-servicios.html",
      "date"        : "2018-12-31 08:32:20 +0100",
      "description" : "Cómo poner el servicio al cliente en el centro, y simplificar los servicios y su gestión.",
      "content"     : "Desde hace unos años, gestionamos los servicios IT siguiendo las más que conocidas librerías ITIL. Con estas buenas prácticas procuramos darle orden a nuestra actividad de servicio, que nos supone un esfuerzo muy importante a nivel de tiempo a lo largo del año.Como buenos adeptos, tenemos nuestro catálogo de servicios a disposición de nuestros usuarios para que puedan, o bien solicitar acceso o acceder directamente.Tradicionalmente, en nuestro caso, hemos utilizado el mapeo de 1 software o repositorio/1 servicio para facilitar tanto la identificación del servicio por parte del usuario, pero sobre todo para el posterior reporte de actividad y monitorización interna de la calidad del software que se usa para proveer dicho servicio.Así pues, por ejemplo, si teníamos una aplicación para gestionar el personal y el directorio de contacto profesional para el staff, otra para gestionar sus vacaciones, y otra para gestionar el tracking del overtime, nos encontrábamos que teníamos 3 servicios distintos, a pesar de que el usuario accedía a través del mismo portal.Con este tipo de configuración, acabamos con un catálogo de más de 30 servicios, cada uno con un nivel de petición de servicio relativamente bajo.Esta solución nos facilita el reporting, nos da cardinalidad acerca de qué uso se hace de nuestros servicios, pero puede llegar a confundir a los usuarios.Si además hay varios equipos que tienen atribuciones diferentes, nos encontramos con que hay peticiones de servicio cruzadas y se produce un overhead en cuanto a gestión, que podría ser evitado.Así pues, nos encontramos con la necesidad de reducir aquel catálogo que un día construimos creyendo seguir el criterio adecuado.Y es que le dimos un enfoque que nos convenía a nosotros.Llegado a este punto la conclusión a la que llego es que, como en el 99,9% de los casos, el usuario debe tener la prioridad.Y en el ejemplo de más arriba, el servicio debería ser uno: el de Recursos Humanos. La identificación de la aplicación, el repositorio, o cualquier otro elemento integrado en él debe de ser identificado por el equipo y correctamente tratado para su posterior gestión, pero debería ser tansparente para el usuario.El enfoque nunca debería ser del departamento hacia adentro, sino del departamento hacia afuera.Independientemente del cómo, lo más importante es el qué. Y el negocio es el que debe prevalecer sobre cualquier solución tecnológica que se haya decidido aplicar. Porque, entre otras cosas, dicha solución puede llegar a ser migrada a otra que tenga exactamente el mismo fin. Sólo así hablaremos el mismo idioma y llegaremos a ofrecer un valor añadido significativo a la empresa.Seguimos en nuestra búsqueda de la Mejora Continua. Os dejo con el diagrama de ITIL, una práctica muy útil e interesante para dar orden a toda vuestra gestión de servicios.Fuente: http://www.bmc.com/guides/itil-introduction.htmlOs deseo a todos un Feliz Año 2019!"
    } ,
  
    {
      "title"       : "El CTO: Tecnología, Comunicación y Liderazgo al servicio de la empresa",
      "category"    : "",
      "tags"        : "cto, comunicación, liderazgo",
      "url"         : "./el-cto-tecnologia-comunicacion-y-liderazgo-al-servicio-de-la-empresa.html",
      "date"        : "2018-12-24 12:32:20 +0100",
      "description" : "El Chief Technology Officer tiene la responsabilidad de llenar el gap entre el Negocio y la Tecnología.",
      "content"     : "Mientras decidía sobre qué escribir esta semana en el blog, caí en una entrada muy interesante, de un contacto de LinkedIn, llamado CTO, figura clave en las compañías actuales.Quien se dedique a este área de expertise, difícilmente podrá evitar que se le escape una sonrisa cuando lea este post, ya que enseguida se siente uno identificado.Y es que hoy en día, los que tenemos un cargo de responsabilidad en el ámbito tecnológico tenemos que, efectivamente, jugar un papel muy polivalente: llenar ese gap entre el Negocio y la Tecnología.Personalmente es lo que más me apasiona de la tecnología: el cómo puede aplicarse a los negocios para hacerlos mejores, más eficaces, más eficientes.Pero vivimos en un reto continuo: los constantes cambios y evoluciones tecnológicas que estamos sufriendo son realmente abrumadores.Si recuerdo la tecnología que había en mis inicios profesionales, hace 15 años, y la comparo con la que hay hoy en día, el cambio es inmenso. Los tiempos se han acelerado tanto que da vértigo.Aspectos como la virtualización, la containerización (si me permitís que use esta palabra), y el uso del smartphone como herramienta de trabajo, ha hecho que todos los sistemas y tecnologías que fueron perfectamente válidos durante varios años, ahora tengan una vida estimada cortísima. Y aparecen nuevas maneras de desarrollar, nuevos frameworks, nuevas arquitecturas y metodologías de trabajo…Y nosotros, como responsables de tecnología, tenemos la obligación de saber cuál es el estado del arte, cuáles son sus ventajas y desventajas, y si debemos/podemos implementarla en la empresa. Ahora, más adelante, o nunca.Un CTO, o cualquier persona que tenga este tipo de responsabilidades, no puede hacer el trabajo sólo (o no siempre, todo depende de la dimensión de la empresa). Tiene que contar con un equipo al que debe liderar, motivar y, ¿por qué no? retar cada día con nuevos proyectos o nuevas maneras de hacer las cosas para ser mejores.La palabra liderazgo, usada en innumerables artículos hoy en día, tiene en este caso la acepción más básica. Algo tan sencillo de escribir como difícil de llevar a cabo:Comunicar eficazmente y transmitir una visión nítida de lo que se espera de cada uno de los miembros del equipo para conseguir el objetivo deseado.El tercer aspecto que nos viene inevitablemente a la cabeza es la gestión del talento. Saber atraerlo y retenerlo, y hacerlo evolucionar, es fundamental. No siempre es posible, y no siempre depende del CTO. Pero su obligación es darle foco y hacer que su equipo crezca. Porque cuanto mejor es el equipo, mejor se vuelve el entrenador. Y nosotros, los entrenadores, también queremos ser mejores.Gracias a Marc Conesa, por su artículo. Felices Fiestas a todos!"
    } 
  
]
